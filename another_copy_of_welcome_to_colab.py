# -*- coding: utf-8 -*-
"""Another copy of Welcome To Colab

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kFF1qzPJqv3XzfMGVga2wicM4gv6cpPL
"""

# Import libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.tree import DecisionTreeClassifier, plot_tree
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
import matplotlib.pyplot as plt

# Step 1: Load data
df = pd.read_csv("Fraud_check 5.csv") # Corrected filename

# Step 2: Create target variable
df["Risk"] = df["Taxable.Income"].apply(lambda x: "Risky" if x <= 30000 else "Good")

# Step 3: Drop the original Taxable.Income column (since we used it to create Risk)
df = df.drop("Taxable.Income", axis=1)

# Step 4: Convert categorical variables to dummy/indicator variables
df = pd.get_dummies(df, drop_first=True)

# Step 5: Split data into features (X) and target (y)
# Drop the dummy variable column for 'Risk' (likely 'Risk_Risky')
X = df.drop("Risk_Risky", axis=1)
# The target variable is the dummy variable column for 'Risk'
y = df["Risk_Risky"]

# Step 6: Split data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 7: Create and train the Decision Tree model
model = DecisionTreeClassifier(criterion="entropy", random_state=42)
model.fit(X_train, y_train)

# Step 8: Make predictions
y_pred = model.predict(X_test)

# Step 9: Evaluate model
print("Accuracy:", accuracy_score(y_test, y_pred))
print("\nConfusion Matrix:\n", confusion_matrix(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))

# Step 10: Visualize the Decision Tree
plt.figure(figsize=(15,10))
plot_tree(model, filled=True, feature_names=X.columns, class_names=["Risky", "Good"])
plt.show()

"""# New Section"""